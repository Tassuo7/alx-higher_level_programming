The `2-matrix_divided` module
==============================

Using `matrix_divided`
----------------------

First import the function ``matrix_divided`` from the module:
     >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Test list of lists of integers divide by 2
     >>> matrix = [[10, 20], [30, 40], [50, 60]]
     >>> matrix_divided(matrix, 2)
     [[5.0, 10.0], [15.0, 20.0], [25.0, 30.0]]
     >>> matrix
     [[10, 20], [30, 40], [50, 60]]

Test list of lists of floats numbers divide by 
     >>> matrix = [[1.5, 2.5], [3.5, 4.5]]
     >>> matrix_divided(matrix, 0.5)
     [[3.0, 5.0], [7.0, 9.0]]
     >>> matrix
     [[1.5, 2.5], [3.5, 4.5]]

test list of lists of integers diviede by zero
     >>> matrix = [[4, 2, 7], [4, 8, 9]]
     >>> matrix_divided(matrix, 0)
     Traceback (most recent call last):
     ...
     ZeroDivisionError: division by zero

Test divide by string
     >>> matrix = [[1, 2, 3], [4, 5, 6]]
     >>> matrix_divided(matrix, "h")
     Traceback (most recent call last):
     ...
     TypeError: div must be a number

Test use more than 2 elements in function
     >>> matrix = [[1, 2, 8], [2, 4, 6]]
     >>> matrix_divided(matrix, 2, 7)
     Traceback (most recent call last):
      ...
     TypeError: matrix_divided() takes 2 positional arguments but 3 were given

Test different size of row
     >>> matrix = [[1, 2.4, 3], [4.1, 5]]
     >>> matrix_divided(matrix, 2)
     Traceback (most recent call last):
      ...
     TypeError: Each row of the matrix must have the same size

Test list of lists of integer and string
     >>> matrix = [[1, 2, "h"], [4, "7", 6]]
     >>> matrix_divided(matrix, 6)
     Traceback (most recent call last):
      ...
     TypeError: matrix must be a matrix (list of lists) of integers/floats
