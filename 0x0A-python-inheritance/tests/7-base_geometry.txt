==============================
doctest for 7-base_geometry.py
==============================

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()

TEST CONDITIONS
===============

testing initialisation
::
>>> print(bg.__dict__)
{}

testing the method area
::
>>> try:
...     bg.area()
... except Exception as err:
...     print(err)
area() is not implemented

testing the method integer_validator
::
>>> try:
...     bg.integer_validator("x", 1)
... except Exception as err:
...     print(err)

testing the method integer_validator with TypeError float
::
>>> try:
...     bg.integer_validator("x", 3.14159)
... except Exception as err:
...     print(err)
x must be an integer

testing the method integer_validator with TypeError string
::
>>> try:
...     bg.integer_validator("x", "52")
... except Exception as err:
...     print(err)
x must be an integer

testing the method integer_validator with TypeError tuple
::
>>> try:
...     bg.integer_validator("x", (0,))
... except Exception as err:
...     print(err)
x must be an integer

testing the method integer_validator with TypeError list
::
>>> try:
...     bg.integer_validator("x", [7])
... except Exception as err:
...     print(err)
x must be an integer

testing the method integer_validator with TypeError boolean
::
>>> try:
...     bg.integer_validator("x", True)
... except Exception as err:
...     print(err)
x must be an integer

testing the method integer_validator with TypeError set
::
>>> try:
...     bg.integer_validator("x", {8})
... except Exception as err:
...     print(err)
x must be an integer

testing the method integer_validator with ValueError negative
::
>>> try:
...     bg.integer_validator("x", -2)
... except Exception as err:
...     print(err)
x must be greater than 0

testing the method integer_validator with ValueError zero
::
>>> try:
...     bg.integer_validator("x", 0)
... except Exception as err:
...     print(err)
x must be greater than 0

testing the method integer_validator with no arguments
::
>>> try:
...     bg.integer_validator()
... except Exception as err:
...     print(err)
integer_validator() missing 2 required positional arguments: 'name' and 'value'

testing the method integer_validator with only one argument
::
>>> try:
...     bg.integer_validator("x")
... except Exception as err:
...     print(err)
integer_validator() missing 1 required positional argument: 'value'

testing the method integer_validator with None
::
>>> try:
...     bg.integer_validator(None, None)
... except Exception as err:
...     print(err)
None must be an integer
